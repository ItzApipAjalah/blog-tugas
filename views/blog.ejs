<!DOCTYPE html>
<html>
<head>
  <title><%= blog ? blog.title : 'Blog Not Found' %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js"></script>
  <script>
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';
  </script>
</head>
<body class="bg-gray-50">
  <div class="max-w-4xl mx-auto px-4 py-8">
    <% if (blog) { %>
      <article class="bg-white rounded-lg shadow-lg p-8">
        <h1 class="text-4xl font-bold text-gray-800 mb-4">
          <%= blog.title %>
        </h1>
        
        <div class="prose max-w-none text-gray-600 mb-6">
          <%= blog.description %>
        </div>

        <% if (blog.file_url) { %>
          <div class="mt-8 mb-6">
            <% 
              const fileUrl = blog.file_url;
              const fileExt = fileUrl.split('.').pop().toLowerCase();
              const isPDF = fileExt === 'pdf';
              const isImage = ['jpg', 'jpeg', 'png', 'gif', 'webp'].includes(fileExt);
              const isAndroid = /Android/i.test(userAgent); 
            %>

            <% if (isImage) { %>
              <!-- Image Preview -->
              <div class="mb-4">
                <img 
                  src="<%= fileUrl %>" 
                  alt="Blog attachment" 
                  class="max-w-full h-auto rounded-lg shadow-md"
                >
              </div>
            <% } else if (isPDF) { %>
              <!-- PDF Preview with PDF.js -->
              <div class="mb-4 w-full">
                <div id="pdf-container" class="bg-gray-100 rounded-lg shadow-md overflow-hidden">
                  <div id="pdf-controls" class="bg-gray-800 text-white p-3 flex items-center justify-between flex-wrap gap-2">
                    <div class="flex items-center gap-2">
                      <button id="prev-page" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded text-sm disabled:opacity-50 disabled:cursor-not-allowed">
                        ← Prev
                      </button>
                      <span id="page-info" class="text-sm">Page 1 of 1</span>
                      <button id="next-page" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded text-sm disabled:opacity-50 disabled:cursor-not-allowed">
                        Next →
                      </button>
                    </div>
                    <div class="flex items-center gap-2">
                      <button id="zoom-out" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded text-sm">−</button>
                      <span id="zoom-level" class="text-sm">100%</span>
                      <button id="zoom-in" class="px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded text-sm">+</button>
                    </div>
                  </div>
                  <div id="pdf-viewer" class="overflow-auto bg-gray-100" style="max-height: 600px;">
                    <canvas id="pdf-canvas" class="mx-auto"></canvas>
                  </div>
                  <div id="pdf-loading" class="text-center py-8 text-gray-600">
                    Loading PDF...
                  </div>
                </div>
                <div class="mt-4 text-sm text-gray-500">
                  Untuk pengalaman yang lebih baik dalam membaca PDF, silahkan gunakan tombol "Open PDF" di bawah.
                </div>
              </div>

              <script>
                (function() {
                  const pdfUrl = '<%= fileUrl %>';
                  let pdfDoc = null;
                  let pageNum = 1;
                  let pageRendering = false;
                  let pageNumPending = null;
                  let scale = 1.5;
                  
                  const canvas = document.getElementById('pdf-canvas');
                  const ctx = canvas.getContext('2d');
                  const loadingDiv = document.getElementById('pdf-loading');
                  
                  function renderPage(num) {
                    pageRendering = true;
                    pdfDoc.getPage(num).then(function(page) {
                      const viewport = page.getViewport({scale: scale});
                      canvas.height = viewport.height;
                      canvas.width = viewport.width;
                      
                      const renderContext = {
                        canvasContext: ctx,
                        viewport: viewport
                      };
                      
                      const renderTask = page.render(renderContext);
                      renderTask.promise.then(function() {
                        pageRendering = false;
                        if (pageNumPending !== null) {
                          renderPage(pageNumPending);
                          pageNumPending = null;
                        }
                      });
                    });
                    
                    document.getElementById('page-info').textContent = 'Page ' + num + ' of ' + pdfDoc.numPages;
                    document.getElementById('prev-page').disabled = (num <= 1);
                    document.getElementById('next-page').disabled = (num >= pdfDoc.numPages);
                  }
                  
                  function queueRenderPage(num) {
                    if (pageRendering) {
                      pageNumPending = num;
                    } else {
                      renderPage(num);
                    }
                  }
                  
                  function onPrevPage() {
                    if (pageNum <= 1) return;
                    pageNum--;
                    queueRenderPage(pageNum);
                  }
                  
                  function onNextPage() {
                    if (pageNum >= pdfDoc.numPages) return;
                    pageNum++;
                    queueRenderPage(pageNum);
                  }
                  
                  function updateZoom(delta) {
                    scale += delta;
                    scale = Math.max(0.5, Math.min(3, scale));
                    document.getElementById('zoom-level').textContent = Math.round(scale * 100) + '%';
                    queueRenderPage(pageNum);
                  }
                  
                  document.getElementById('prev-page').addEventListener('click', onPrevPage);
                  document.getElementById('next-page').addEventListener('click', onNextPage);
                  document.getElementById('zoom-in').addEventListener('click', () => updateZoom(0.25));
                  document.getElementById('zoom-out').addEventListener('click', () => updateZoom(-0.25));
                  
                  pdfjsLib.getDocument(pdfUrl).promise.then(function(pdfDoc_) {
                    pdfDoc = pdfDoc_;
                    loadingDiv.style.display = 'none';
                    canvas.style.display = 'block';
                    renderPage(pageNum);
                  }).catch(function(error) {
                    loadingDiv.textContent = 'Error loading PDF: ' + error.message;
                    console.error('Error loading PDF:', error);
                  });
                })();
              </script>
            <% } %>

            <!-- Download Button (always show for accessibility) -->
            <a 
              href="<%= fileUrl %>" 
              target="_blank"
              class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
            >
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <% if (!isImage && !isPDF) { %>
                  <!-- Download icon for non-preview files -->
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                <% } else { %>
                  <!-- External link icon for preview files -->
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                <% } %>
              </svg>
              <%= isImage ? 'View Full Image' : (isPDF ? 'Open PDF' : 'Download File') %>
            </a>
          </div>
        <% } %>

        <div class="mt-6 flex items-center text-sm text-gray-500">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          Posted on: <%= new Date(blog.created_at).toLocaleString('id-ID', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            timeZone: 'Asia/Jakarta'
          }) %> WIB
        </div>
      </article>
    <% } else { %>
      <div class="text-center py-12 bg-white rounded-lg shadow-lg">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h3 class="mt-2 text-sm font-medium text-gray-900">Blog Not Found</h3>
        <p class="mt-1 text-sm text-gray-500">The requested blog post could not be found.</p>
      </div>
    <% } %>

    <div class="mt-6">
      <a 
        href="/" 
        class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to Home
      </a>
    </div>
  </div>
</body>
</html>